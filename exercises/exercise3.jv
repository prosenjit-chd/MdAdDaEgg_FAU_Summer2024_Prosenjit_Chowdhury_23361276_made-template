pipeline CommoditiesPipeline {

    // Downloads the commodities CSV file from the specified URL (In: None, Out: File)
    block CommoditiesDownloader oftype HttpExtractor {
        url: "https://www-genesis.destatis.de/genesis/downloads/00/tables/46131-0014_00.csv";
    }

    // Converts the downloaded file to a TextFile (In: File, Out: TextFile)
    block CommoditiesTextFileConverter oftype TextFileInterpreter { encoding: "latin2"; }

    // Selects the relevant range from the TextFile, ignoring metadata (In: TextFile, Out: TextFile)
    block CommoditiesRangeSelector oftype TextRangeSelector { lineFrom: 8; lineTo: 41336; }

    // Converts the TextFile to a CSV format (In: TextFile, Out: Sheet)
    block CommoditiesCSVConverter oftype CSVInterpreter { delimiter: ";"; }

    // Ensures data validation for other columns
    constraint PositiveRangeConstraint oftype RangeConstraint { lowerBound: 0; lowerBoundInclusive: false; }
    valuetype PositiveIntegerValue oftype integer { constraints: [PositiveRangeConstraint]; }

    // Validates the format of the commodity ID
    constraint ValidCommodityIdFormat oftype RegexConstraint {
        regex: /^NST7-[A-Z0-9]{3}$/;
    }

    valuetype ValidCommodityId oftype text { constraints: [ValidCommodityIdFormat]; }


    // Renames the necessary columns in the CSV file (In: Sheet, Out: Sheet)
    block CommoditiesColumnRenamer_AtoE oftype CellWriter { at: range A1:E1; write: ["year", "month", "commodity_id", "commodity_name", "commodity_source"]; }
    block CommoditiesColumnRenamer_ATtoAU oftype CellWriter { at: range AT1:AU1; write: ["international", "total"]; }


    // Converts the CSV data to a table and removes unnecessary columns (In: Sheet, Out: Table)
    block CommoditiesTableConverter oftype TableInterpreter {
        header: true;
        columns: [
            "year" oftype PositiveIntegerValue,
            "month" oftype text,
            "goods_id" oftype ValidCommodityId,
            "goods_name" oftype text,
            "goods_source" oftype text,
            "abroad" oftype PositiveIntegerValue,
            "total" oftype PositiveIntegerValue,
        ];
    }
    // Chains all blocks in the CommoditiesPipeline
    CommoditiesDownloader
        -> CommoditiesTextFileConverter
        -> CommoditiesRangeSelector
        -> CommoditiesCSVConverter
        -> CommoditiesColumnRenamer_AtoE
        -> CommoditiesColumnRenamer_ATtoAU
        -> CommoditiesTableConverter
        -> CommoditiesDataLoader;


    // Loads the commodities data into an SQLite database (In: Table, Out: None)
    block CommoditiesDataLoader oftype SQLiteLoader {
        table: "goods";
        file: "./goodsTransportedByTrain.sqlite";
    }


}
